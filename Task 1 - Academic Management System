
1) Database Creation
CREATE TABLE StudentInfo (
    STU_ID INT NOT NULL PRIMARY KEY, 
    STU_NAME VARCHAR(20), 
    DOB DATE, 
    PHONE_NO VARCHAR(20), 
    EMAIL_ID VARCHAR(20), 
    ADDRESS VARCHAR(200)
);

Create Table CoursesInfo (
	Course_ID INT NOT NULL Primary Key, 
	COURSE_NAME Varchar(20), 
	COURSE_INSTRUCTOR_NAME Varchar(20)
);

Create Table EnrollementInfo (ENROLLMENT_ID INT NOT NULL PRIMARY KEY, 
    STU_ID INT,
    COURSE_ID INT,
    ENROLL_STATUS VARCHAR(20),
    FOREIGN KEY (STU_ID) REFERENCES StudentInfo(STU_ID), 
    FOREIGN KEY (COURSE_ID) REFERENCES CoursesInfo(COURSE_ID));
	
	2) Data Creation:
	INSERT INTO StudentInfo VALUES (1, 'Deepan', '7-MAY-90', '9846794380', 'deepan@gmail.com', 'CHENNAI'),
    (2, 'Deepak', '11-NOV-89', '56373920282', 'deepak@gmail.com', 'Pondichery'),
    (3, 'Shubhi', '17-JAN-93', '542547905', 'shubhi@gmail.com', 'chennai'),
    (4, 'jasmine', '24-JAN-93', '6758393023', 'jasmine@gmail.com', 'bangalore'),
    (5, 'sam', '15-FEB-87', '567483903', 'sam@gmail.com', 'madurai'),
    (6, 'kirthika', '06-DEC-92', '789054357', 'kirthika@gmail.com','coimbaitore'),
    (7, 'sridhar', '29-AUG-84', '674567890', 'sridhar@gmail.com','bangalore'),
    (8, 'Bhuvi', '31-JUL-83', '6758390246', 'bhuvi@gmail.com','chennai'),
    (9, 'Chayan', '07-JAN-82', '8564738935', 'chayan@gmail.com','Bangalore'),
    (10, 'Manu', '20-DEC-85', '9985438561', 'manu@gmail.com','Chennai')
;

INSERT INTO CoursesInfo VALUES (001, 'SQL', 'Devi'),
    (002, 'python', 'Shubash'),
    (003, 'R', 'nickson'),
    (004, 'HTML', 'Kala'),
    (005, 'CSS', 'Jerry'),
    (006, 'Dev Ops', 'Abhijit'),
    (007, 'Power BI', 'Immanuel'),
    (008, 'Hadoop','Karthik'),
    (009, 'Advanced SQL', 'peter'),
	(010, 'Advanced Python', 'Karun')
	 
;

INSERT INTO EnrollementInfo VALUES
    (11,1, 001, 'Enrolled'),
    (12,2, 010, 'Not Enrolled'),
    (13,3, 002, 'Enrolled'),
    (14,1, 007,  'Enrolled'),
    (15, 4, 003,'Enrolled'),
    (16,5, 004, 'Not Enrolled'),
    (17, 6, 005, 'Enrolled'),
    (18, 7, 006, 'Not Enrolled'),
    (19, 8, 008, 'Enrolled'), 
    (20, 9, 009 , 'Enrolled'),
    (21, 10, 010 , 'Enrolled'),
    (22, 10 , 009 , 'Enrolled'),
    (23, 2, 001, 'Enrolled'),
    (24, 2, 002, 'Enrolled'),
    (25, 3, 010, 'Not Enrolled'),
    (26, 6, 009,  'Enrolled'),
    (27, 6, 008, 'Enrolled'),
    (28, 7, 007 , 'Enrolled'),
    (29, 7, 009, 'Enrolled'),
    (30, 6, 004, 'Not Enrolled')
;

3) Retrive the student information

a) Write a query to retrieve student details, such as student name, contact information and Enrollment status. 
SELECT a.STU_NAME, a.PHONE_NO, a.EMAIL_ID, a.ADDRESS, b.ENROLL_STATUS
FROM StudentInfo a
INNER JOIN EnrollementInfo b ON a.STU_ID = b.STU_ID;

b) Write a query to retrieve a list of courses in which a specific student is enrolled. 
SELECT a.STU_ID, a.STU_NAME, c.COURSE_NAME, b.ENROLL_STATUS
FROM StudentInfo a
INNER JOIN EnrollementInfo b ON a.STU_ID = b.STU_ID
INNER JOIN CoursesInfo c ON c.COURSE_ID = b.COURSE_ID
WHERE a.STU_ID = 1;

c) Write a query to retrieve course information, including course name, instructor information.

SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo

d) Write a query to retrieve course information for a specific course.

SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo
WHERE COURSE_ID = 001;

 e) Write a query to retrieve course information for multiple courses.

SELECT COURSE_NAME, COURSE_INSTRUCTOR_NAME
FROM CoursesInfo
WHERE COURSE_ID IN (001,003,006);

f) Test the queries to ensure accurate retrieval of student information (execute the queries and verify the results against the expected output).

SELECT * FROM StudentInfo;

SELECT * FROM StudentInfo WHERE STU_NAME = 'Shubhi'

4) Reporting and Analytics (Using Joining Queries)

a) Write a query to retrieve the number of students enrolled in each course.

SELECT c.COURSE_NAME, COUNT (*) as Number_of_enrolled_students
FROM CoursesInfo c
LEFT JOIN EnrollementInfo b ON c.COURSE_ID = b.COURSE_ID
WHERE b.Enroll_status = 'Enrolled'
GROUP BY c.COURSE_NAME

b) b) Write a query to retrieve the list of students enrolled in a specific course.

SELECT a.STU_NAME
FROM StudentInfo a
INNER JOIN EnrollementInfo b ON a.STU_ID = b.STU_ID
INNER JOIN CoursesInfo c ON c.COURSE_ID =b.COURSE_ID
WHERE b.Enroll_status = 'Enrolled'
AND c.COURSE_NAME = 'Advanced SQL'

c) Write a query to retrieve the count of enrolled students for each instructor.

SELECT c.COURSE_INSTRUCTOR_NAME, COUNT (*) as mber_of_enrolled_students
FROM CoursesInfo c
JOIN EnrollementInfo b ON c.COURSE_ID = b.COURSE_ID
WHERE b.Enroll_status = 'Enrolled'
GROUP BY c.COURSE_INSTRUCTOR_NAME;

d) Write a query to retrieve the list of students who are enrolled in multiple courses.

SELECT a.STU_NAME, COUNT (*) AS Number_of_enrolled_students
FROM StudentInfo a
JOIN EnrollementInfo b ON b.STU_ID = a.STU_ID
WHERE b.Enroll_status = 'Enrolled'
GROUP BY a.STU_NAME
HAVING COUNT (*) > 1;

e) Write a query to retrieve the courses that have the highest number of enrolled students (arranging from highest to lowest).

SELECT c.COURSE_NAME, COUNT (*) as Number_of_enrolled_srudents
FROM CoursesInfo c
LEFT JOIN EnrollementInfo b ON c.COURSE_ID = b.COURSE_ID
WHERE b.Enroll_status = 'Enrolled'
GROUP BY c.COURSE_NAME
ORDER BY Number_of_enrolled_srudents DESC;


